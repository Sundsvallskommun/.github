name: Build and Push Docker image

on:
  workflow_call:
  workflow_dispatch:

jobs:
  meta:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      version: ${{ steps.maven.outputs.version }}
      repo_owner: ${{ steps.repo_owner.outputs.owner_lc }}
      repo_name: ${{ steps.repo_name.outputs.name_lc }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Set up Java (for Maven)
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven repository
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: ~/.m2/repository
          key: m2-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            m2-${{ runner.os }}-

      - name: Maven package (host)
        run: mvn -B -DskipTests clean package

      - name: Read Maven version
        id: maven
        run: |
          VERSION=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Get lowercase repo owner
        id: repo_owner
        run: echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Get lowercase repo name
        id: repo_name
        shell: bash
        run: |
          repo_name="${GITHUB_REPOSITORY##*/}"
          echo "name_lc=${repo_name,,}" >> $GITHUB_OUTPUT

      - name: Upload JAR artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: built-jar
          path: |
            target/*.jar
          if-no-files-found: error

  build:
    needs: meta
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout repository (for Docker context)
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Download JAR artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          name: built-jar
          path: target

      - name: Enable QEMU (cross-arch emulation)
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Build & push per-arch tags
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          push: true
          platforms: linux/${{ matrix.arch }}
          tags: |
            ghcr.io/${{ needs.meta.outputs.repo_owner }}/${{ needs.meta.outputs.repo_name }}:${{ needs.meta.outputs.version }}-${{ matrix.arch }}
            ghcr.io/${{ needs.meta.outputs.repo_owner }}/${{ needs.meta.outputs.repo_name }}:latest-${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ needs.meta.outputs.version }}

  manifest:
    needs: [meta, build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multi-arch manifest for :<version>
        run: |
          docker buildx imagetools create \
            -t ghcr.io/${{ needs.meta.outputs.repo_owner }}/${{ needs.meta.outputs.repo_name }}:${{ needs.meta.outputs.version }} \
            ghcr.io/${{ needs.meta.outputs.repo_owner }}/${{ needs.meta.outputs.repo_name }}:${{ needs.meta.outputs.version }}-amd64 \
            ghcr.io/${{ needs.meta.outputs.repo_owner }}/${{ needs.meta.outputs.repo_name }}:${{ needs.meta.outputs.version }}-arm64

      - name: Create multi-arch manifest for :latest
        if: ${{ github.ref == 'refs/heads/main' && !endsWith(needs.meta.outputs.version, '-SNAPSHOT') }}
        run: |
          docker buildx imagetools create \
            -t ghcr.io/${{ needs.meta.outputs.repo_owner }}/${{ needs.meta.outputs.repo_name }}:latest \
            ghcr.io/${{ needs.meta.outputs.repo_owner }}/${{ needs.meta.outputs.repo_name }}:latest-amd64 \
            ghcr.io/${{ needs.meta.outputs.repo_owner }}/${{ needs.meta.outputs.repo_name }}:latest-arm64
